@using PagedList.Mvc
@model PagedList.IPagedList<CPP.Models.Medico>

@{
    ViewBag.Title = "Inicio";
}

<h2>Inicio</h2>

<p>
    @Html.ActionLink("Crear Nuevo", "Create")
</p>


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">

                <h5>@ViewBag.Title</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="#">Config option 1</a>
                        </li>
                        <li>
                            <a href="#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link"><i class="fa fa-times"></i></a>
                </div>
            </div>

            <div class="ibox-content">

                <div class="input-group" style="width:100%">

                    @using (Html.BeginForm("Index", "Medicos", FormMethod.Get, new { @class = "form-inline" }))
                    {
                        <div class="input-group">
                            @Html.TextBox("search", ViewBag.CurrenSearch as string, new { @class = "form-control", placeholder = "Escriba la Busqueda", aria_describedby = "basic-addon2" })
                            <span class="input-group-btn">
                                <button type="submit" class="btn btn-default" type="button">Buscar</button>
                            </span>
                        </div>
                    }

                </div>


                <div class="table-responsive" style="overflow-x: scroll">
                    <table class="table table-hover table-striped table-condensed small">
                        <tr>
                            <th></th>
                            <th></th>
                            <th>
                                @Html.ActionLink("Nombre", "index", new { sort = ViewBag.NombreSort, search = ViewBag.CurrentSearch })
                            </th>

                            <th>
                                @Html.ActionLink("Apellido", "index", new { sort = ViewBag.ApellidoSort, search = ViewBag.CurrentSearch })
                            </th>

                            <th>
                                @Html.ActionLink("Especialidad", "index", new { sort = ViewBag.EspecialidadSort, search = ViewBag.CurrentSearch })
                            </th>

                            <th>
                                @Html.ActionLink("CodigoMinsa", "index", new { sort = ViewBag.CodigoMinsaSort, search = ViewBag.CurrentSearch })
                            </th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.nombre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.apellido)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.especialidad)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.codigoMinsa)
                                </td>
                                <td>
                                    @Html.ActionLink("Editar", "Edit", new { id = item.medicoId }) |
                                    @Html.ActionLink("Detalles", "Details", new { id = item.medicoId }) |
                                    @Html.ActionLink("Eliminar", "Delete", new { id = item.medicoId })
                                </td>
                            </tr>
                        }

                    </table>

                </div>@*END class="table-responsive"*@
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))

            </div>
        </div>
    </div>
</div>